{"ast":null,"code":"var _jsxFileName = \"/home/geanderson062/Documentos/GitHub/Simulacao-bulbo-camada-superficial/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { fetchData } from \"./service/BulboSuperficial_backend\"; // Importe a função fetchData\nimport \"materialize-css/dist/css/materialize.min.css\"; // Importe o arquivo CSS do Materialize\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [soilTexture, setSoilTexture] = useState(null);\n  const [hydraulicConductivity, setHydraulicConductivity] = useState(null);\n  const [porosity, setPorosity] = useState(null);\n  const [fieldCapacity, setFieldCapacity] = useState(null);\n  const [wiltingPoint, setWiltingPoint] = useState(null);\n  const [initialMoisture, setInitialMoisture] = useState(null);\n  const [soluteConcentration, setSoluteConcentration] = useState(null);\n  const [surfaceWaterFlow, setSurfaceWaterFlow] = useState(null);\n  const [evaporationRate, setEvaporationRate] = useState(null);\n  const [precipitation, setPrecipitation] = useState(null);\n  const [temperature, setTemperature] = useState(null);\n  const [humidity, setHumidity] = useState(null);\n  const [windSpeed, setWindSpeed] = useState(null);\n  const [radiation, setRadiation] = useState(null);\n  const [surfaceArea, setSurfaceArea] = useState(null);\n  const [soilThickness, setSoilThickness] = useState(null);\n  // Adicione mais estados conforme necessário\n\n  const handleSimulation = async () => {\n    try {\n      const soilProperties = await fetchData(\"/soil_properties/norte\");\n      const initialConditions = await fetchData(\"/initial_conditions/norte\");\n      const boundaryConditions = await fetchData(\"/boundary_conditions/norte\");\n      const climate_parameters = await fetchData(\"/climate_parameters/norte\");\n      const domain_geometry = await fetchData(\"/domain_geometry/norte\");\n      const time_interval = await fetchData(\"/time_interval/\");\n      const saturation_drainage = await fetchData(\"/saturation_drainage/norte\");\n      // Adicione mais chamadas de API conforme necessário\n\n      // Extrai os valores individuais e armazena em variáveis\n      const {\n        texture,\n        hydraulic_conductivity,\n        porosity,\n        field_capacity,\n        wilting_point\n      } = soilProperties;\n      setSoilTexture(texture);\n      setHydraulicConductivity(hydraulic_conductivity);\n      setPorosity(porosity);\n      setFieldCapacity(field_capacity);\n      setWiltingPoint(wilting_point);\n      // Atualize outras variáveis conforme necessário\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"header center-align\",\n      children: \"Simula\\xE7\\xE3o do Bulbo \\xDAmido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s12 center-align\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn waves-effect waves-light blue\",\n          onClick: handleSimulation,\n          children: \"Simula\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), soilTexture && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Propriedades do Solo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Textura do Solo: \", soilTexture]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Condutividade Hidr\\xE1ulica: \", hydraulicConductivity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Porosidade: \", porosity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Capacidade de Campo: \", fieldCapacity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ponto de Murcha Permanente: \", wiltingPoint]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j2PG7QnQ7EoymMxUoGHPIVg8eak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fetchData","jsxDEV","_jsxDEV","App","_s","soilTexture","setSoilTexture","hydraulicConductivity","setHydraulicConductivity","porosity","setPorosity","fieldCapacity","setFieldCapacity","wiltingPoint","setWiltingPoint","initialMoisture","setInitialMoisture","soluteConcentration","setSoluteConcentration","surfaceWaterFlow","setSurfaceWaterFlow","evaporationRate","setEvaporationRate","precipitation","setPrecipitation","temperature","setTemperature","humidity","setHumidity","windSpeed","setWindSpeed","radiation","setRadiation","surfaceArea","setSurfaceArea","soilThickness","setSoilThickness","handleSimulation","soilProperties","initialConditions","boundaryConditions","climate_parameters","domain_geometry","time_interval","saturation_drainage","texture","hydraulic_conductivity","field_capacity","wilting_point","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/geanderson062/Documentos/GitHub/Simulacao-bulbo-camada-superficial/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { fetchData } from \"./service/BulboSuperficial_backend\"; // Importe a função fetchData\nimport \"materialize-css/dist/css/materialize.min.css\"; // Importe o arquivo CSS do Materialize\n\nfunction App() {\n  const [soilTexture, setSoilTexture] = useState(null);\n  const [hydraulicConductivity, setHydraulicConductivity] = useState(null);\n  const [porosity, setPorosity] = useState(null);\n  const [fieldCapacity, setFieldCapacity] = useState(null);\n  const [wiltingPoint, setWiltingPoint] = useState(null);\n  const [initialMoisture, setInitialMoisture] = useState(null);\n  const [soluteConcentration, setSoluteConcentration] = useState(null);\n  const [surfaceWaterFlow, setSurfaceWaterFlow] = useState(null);\n  const [evaporationRate, setEvaporationRate] = useState(null);\n  const [precipitation, setPrecipitation] = useState(null);\n  const [temperature, setTemperature] = useState(null);\n  const [humidity, setHumidity] = useState(null);\n  const [windSpeed, setWindSpeed] = useState(null);\n  const [radiation, setRadiation] = useState(null);\n  const [surfaceArea, setSurfaceArea] = useState(null);\n  const [soilThickness, setSoilThickness] = useState(null);\n  // Adicione mais estados conforme necessário\n\n  const handleSimulation = async () => {\n    try {\n      const soilProperties = await fetchData(\"/soil_properties/norte\");\n      const initialConditions = await fetchData(\"/initial_conditions/norte\");\n      const boundaryConditions = await fetchData(\"/boundary_conditions/norte\");\n      const climate_parameters = await fetchData(\"/climate_parameters/norte\");\n      const domain_geometry = await fetchData(\"/domain_geometry/norte\");\n      const time_interval = await fetchData(\"/time_interval/\");\n      const saturation_drainage = await fetchData(\"/saturation_drainage/norte\");\n      // Adicione mais chamadas de API conforme necessário\n\n      // Extrai os valores individuais e armazena em variáveis\n      const {\n        texture,\n        hydraulic_conductivity,\n        porosity,\n        field_capacity,\n        wilting_point,\n      } = soilProperties;\n      setSoilTexture(texture);\n      setHydraulicConductivity(hydraulic_conductivity);\n      setPorosity(porosity);\n      setFieldCapacity(field_capacity);\n      setWiltingPoint(wilting_point);\n      // Atualize outras variáveis conforme necessário\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h5 className=\"header center-align\">Simulação do Bulbo Úmido</h5>\n      <div className=\"row\">\n        <div className=\"col s12 center-align\">\n          <button\n            className=\"btn waves-effect waves-light blue\"\n            onClick={handleSimulation}\n          >\n            Simulação\n          </button>\n        </div>\n      </div>\n\n      {soilTexture && (\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <h3>Propriedades do Solo</h3>\n            <p>Textura do Solo: {soilTexture}</p>\n            <p>Condutividade Hidráulica: {hydraulicConductivity}</p>\n            <p>Porosidade: {porosity}</p>\n            <p>Capacidade de Campo: {fieldCapacity}</p>\n            <p>Ponto de Murcha Permanente: {wiltingPoint}</p>\n            {/* Adicione mais parágrafos conforme necessário */}\n          </div>\n        </div>\n      )}\n\n      {/* Renderize outros dados conforme necessário */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}